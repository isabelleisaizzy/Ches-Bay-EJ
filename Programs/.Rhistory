show.legend=FALSE)+
bi_scale_fill(pal="Bluegill",dim=3)+
bi_theme()
legend<-bi_legend(pal="Bluegill",
dim=3,
ylab = "% Low Income",
xlab = "Fish per Angler")
final_plot <- ggdraw() +
draw_plot(map,0,0,1,1)+
draw_plot(legend,0.2,.65,.2,.2)
final_plot
unemp_data<-tripcatch_2022_acs |> select(-pct_pov)|>
na.omit() # get rid of any NA's that would have come from unemployment
unemp_data <- bi_class(biv_data, y=pct_pov,x=fish_per_angler_trip,style="jenks",dim=3)
ggplot(tripcatch_2022_acs,aes(pct_pov,fish_per_angler_trip)) +
geom_point() +
labs(title="Fish per Angler-Trip vs % Under Poverty Threshold")
#shows vast majority of fishing zip codes get no fish
#loose negative correlation btwn fish/angler and percent under the pov threshold
can_fish <- tripcatch_2022_acs|>
filter(fish_per_angler_trip>5)
ggplot(can_fish,aes(pct_pov,fish_per_angler_trip)) +
geom_point() +
labs(title="Fish per Angler-Trip vs % Under Poverty Threshold")
#relationship inverse; so for avid fishers, having more ppl under poverty threshold is a predictor of fish per angler caught
library(tidyverse)
library(here)
library(readr)
library(sf)
library(mapview)
library(RColorBrewer)
#load data
data_path <- here('data') #relative path to the data folder
load(here('data','intermediate_datasets','cb_zip.RData'))
load(here('data','intermediate_datasets','manual_zip.RData'))
load(here('data','intermediate_datasets','trip_catch_2022.RData'))
tripcatch_2022_zip <- trip_catch_2022 |>
group_by(ZIP)|>
reframe(num_eaten = sum(landing),
num_claim = sum(CLAIM),
num_id_codes = ID_CODE|>length(),
num_angler_trips = sum(CNTRBTRS))|>
#mutate(num_angler_trips = num_id_codes*sum(CNTRBTRS))|>
mutate(fish_per_angler_trip=num_claim/num_angler_trips)
#represents fish per person per trip
tripcatch_2022_zip <- zip_manual |>
left_join(tripcatch_2022_zip,by=c("ZIP"="ZIP"))
#if we do a right join with zip, you'll get all the zip codes but no relative knowledge of where they are
mapview(tripcatch_2022_zip,
zcol = 'num_claim',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = '# Fish Eaten')
#more data visualizations
ggplot(data = tripcatch_2022_zip, aes(x=fish_per_angler_trip))+geom_histogram()
#shows HEAVY skew right, most common value of fish/angler is 0 at the zipcode level
#max number of fish/angler is about 32
mapview(tripcatch_2022_zip,
zcol = 'num_angler_trips',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Per Angler Per Trip Frequency')
mapview(tripcatch_2022_zip,
zcol = 'fish_per_angler_trip',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Number of Fish per Angler Trip')
#sum the weight of each zip code's trip's total fish
weight_tripcatch <- trip_catch_2022 |>
group_by(ID_CODE)|>
reframe(weight_claim = sum(wgt_a),
num_trip_ids = n(),
weight_per_angler_per_trip = sum(weight_claim)/sum(CNTRBTRS))#should be 5444 obs
#note that this is by claim, not landing
#if we wanted to do landing, we'd have to edit the #cntrbtrs so that it shares values with the LEADER variable, bc cntrbtrs is always 0 for non-claim fish
#aggregate at zip code level
weight_tripcatch_zip <- trip_catch_2022 |>
group_by(ID_CODE,ZIP)|>
summarize()|>
inner_join(weight_tripcatch,by=c("ID_CODE"="ID_CODE"))|>#to add ZIP variable
group_by(ZIP)|>
reframe(zip_weight_per_angler_trip = sum(weight_per_angler_per_trip),
zip_weight = sum(weight_claim))
#join to zip
weight_tripcatch_zip <- zip_manual |>
left_join(weight_tripcatch_zip,by=c("ZIP"="ZIP"))
#map it
mapview(weight_tripcatch_zip,
zcol="zip_weight",
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Fish Weight')
#add the other zip_manual shapefile
mapview(weight_tripcatch_zip,
zcol="zip_weight_per_angler_trip",
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Weight per angler')
load(here('data','intermediate_datasets','acs_economic_cleaner.RData'))
#acs data has some duplicates, so we're going to remove them
acs_economic <- acs_economic |>
group_by(ZIP)|>
reframe(GEO_ID=GEO_ID[1],
NAME = NAME[1],
unemployment = unemployment[1],
pct_pov = pct_pov[1])
tripcatch_2022_acs <- tripcatch_2022_zip|>
inner_join(acs_economic,by=c("ZCTA5CE20"="ZIP")) |>
mutate(pct_pov = case_when( # reassign "-" values to NA - double check w excel that that's right
pct_pov == "-" ~ NA,
TRUE ~ pct_pov),
unemployment = case_when(
unemployment == "-" ~ NA,
TRUE ~ unemployment
))
#need to assign "-" to NA for pct_pov
tripcatch_2022_acs<- tripcatch_2022_acs|>
mutate(unemployment = unemployment |> as.numeric(),
pct_pov = pct_pov |> as.numeric())
library(biscale)
library(cowplot)
biv_data<-tripcatch_2022_acs |> select(-unemployment)|>
na.omit() # get rid of any NA's that would have come from unemployment
biv_data <- bi_class(biv_data, y=pct_pov,x=fish_per_angler_trip,style="jenks",dim=3)
map<-ggplot() +
geom_sf(data=zip_manual,
fill="White")+
geom_sf(data=biv_data,
mapping=aes(fill=bi_class),
show.legend=FALSE)+
bi_scale_fill(pal="Bluegill",dim=3)+
bi_theme()
legend<-bi_legend(pal="Bluegill",
dim=3,
ylab = "% Low Income",
xlab = "Fish per Angler")
final_plot <- ggdraw() +
draw_plot(map,0,0,1,1)+
draw_plot(legend,0.2,.65,.2,.2)
final_plot
unemp_data<-tripcatch_2022_acs |> select(-pct_pov)|>
na.omit() # get rid of any NA's that would have come from unemployment
unemp_data <- bi_class(biv_data, y=pct_pov,x=fish_per_angler_trip,style="jenks",dim=3)
ggplot(tripcatch_2022_acs,aes(pct_pov,fish_per_angler_trip)) +
geom_point() +
labs(title="Fish per Angler-Trip vs % Under Poverty Threshold")
#shows vast majority of fishing zip codes get no fish
#loose negative correlation btwn fish/angler and percent under the pov threshold
can_fish <- tripcatch_2022_acs|>
filter(fish_per_angler_trip>5)
ggplot(can_fish,aes(pct_pov,fish_per_angler_trip)) +
geom_point() +
labs(title="Fish per Angler-Trip vs % Under Poverty Threshold")
#relationship inverse; so for avid fishers, having more ppl under poverty threshold is a predictor of fish per angler caught
ggplot(data = tripcatch_2022_zip, aes(x=num_angler_trips))+geom_histogram()
ggplot(data = tripcatch_2022_zip, aes(x=fish_per_angler_trip))+geom_histogram()
#shows HEAVY skew right, most common value of fish/angler is 0 at the zipcode level
#max number of fish/angler is about 32
ggplot(tripcatch_2022_zip,aes(num_claim,num_angler_trips)) +
geom_point() +
labs(title="Fish caught (CLAIM) vs Number of Trips")
ggplot(data = weight_tripcatch_zip, aes(x=zip_weight))+geom_histogram()
ggplot(weight_tripcatch_zip,aes(zip_weight,num_angler_trips)) +
geom_point() +
labs(title="Fish weight (CLAIM) vs Number of Trips")
weight_tripcatch <- trip_catch_2022 |>
group_by(ID_CODE)|>
reframe(weight_claim = sum(wgt_a),
num_trip_ids = n(),
num_angler_trips=sum(CNTRBTRS),
weight_per_angler_per_trip = sum(weight_claim)/sum(CNTRBTRS))#should be 5444 obs
#note that this is by claim, not landing
#if we wanted to do landing, we'd have to edit the #cntrbtrs so that it shares values with the LEADER variable, bc cntrbtrs is always 0 for non-claim fish
#aggregate at zip code level
weight_tripcatch_zip <- trip_catch_2022 |>
group_by(ID_CODE,ZIP)|>
summarize()|>
inner_join(weight_tripcatch,by=c("ID_CODE"="ID_CODE"))|>#to add ZIP variable
group_by(ZIP)|>
reframe(zip_weight_per_angler_trip = sum(weight_per_angler_per_trip),
zip_weight = sum(weight_claim))
#join to zip
weight_tripcatch_zip <- zip_manual |>
left_join(weight_tripcatch_zip,by=c("ZIP"="ZIP"))
ggplot(weight_tripcatch_zip,aes(zip_weight,num_angler_trips)) +
geom_point() +
labs(title="Fish weight (CLAIM) vs Number of Trips")
weight_tripcatch_zip <- trip_catch_2022 |>
group_by(ID_CODE,ZIP)|>
summarize()|>
inner_join(weight_tripcatch,by=c("ID_CODE"="ID_CODE"))|>#to add ZIP variable
group_by(ZIP)|>
reframe(zip_weight_per_angler_trip = sum(weight_per_angler_per_trip),
zip_weight = sum(weight_claim),
num_angler_trips = sum(num_angler_trips))
#join to zip
weight_tripcatch_zip <- zip_manual |>
left_join(weight_tripcatch_zip,by=c("ZIP"="ZIP"))
ggplot(weight_tripcatch_zip,aes(zip_weight,num_angler_trips)) +
geom_point() +
labs(title="Fish weight (CLAIM) vs Number of Trips")
unemp_data<-tripcatch_2022_acs |> select(-pct_pov)|>
na.omit() # get rid of any NA's that would have come from pct_pov
unemp_data <- bi_class(unemp_data, y=unemployment,x=fish_per_angler_trip,style="jenks",dim=3)
unemp_map<-ggplot() +
geom_sf(data=zip_manual,
fill="White")+
geom_sf(data=unemp_data,
mapping=aes(fill=bi_class),
show.legend=FALSE)+
bi_scale_fill(pal="Bluegill",dim=3)+
bi_theme()
legend<-bi_legend(pal="Bluegill",
dim=3,
ylab = "% Unemployed in Civilian Labor Force",
xlab = "Fish per Angler")
final_plot <- ggdraw() +
draw_plot(map,0,0,1,1)+
draw_plot(legend,0.2,.65,.2,.2)
unemp_data<-tripcatch_2022_acs |> select(-pct_pov)|>
na.omit() # get rid of any NA's that would have come from pct_pov
unemp_data <- bi_class(unemp_data, y=unemployment,x=fish_per_angler_trip,style="jenks",dim=3)
unemp_map<-ggplot() +
geom_sf(data=zip_manual,
fill="White")+
geom_sf(data=unemp_data,
mapping=aes(fill=bi_class),
show.legend=FALSE)+
bi_scale_fill(pal="Bluegill",dim=3)+
bi_theme()
legend<-bi_legend(pal="Bluegill",
dim=3,
ylab = "% Unemployed in Civilian Labor Force",
xlab = "Fish per Angler")
final_plot <- ggdraw() +
draw_plot(unemp_map,0,0,1,1)+
draw_plot(legend,0.2,.65,.2,.2)
final_plot
canfish_pov_data<-can_fish |> select(-unemployment)|>
na.omit() # get rid of any NA's that would have come from unemployment
canfish_pov_data <- bi_class(canfish_pov_data, y=pct_pov,x=fish_per_angler_trip,style="jenks",dim=3)
canfish_pov_map<-ggplot() +
geom_sf(data=zip_manual,
fill="White")+
geom_sf(data=canfish_pov_data,
mapping=aes(fill=bi_class),
show.legend=FALSE)+
bi_scale_fill(pal="Bluegill",dim=3)+
bi_theme()
legend<-bi_legend(pal="Bluegill",
dim=3,
ylab = "% Poverty",
xlab = "Fish per Angler")
canfish_pov_plot <- ggdraw() +
draw_plot(canfish_pov_map,0,0,1,1)+
draw_plot(legend,0.2,.65,.2,.2)
canfish_pov_plot
pov_data<-tripcatch_2022_acs |> select(-unemployment)|>
na.omit() # get rid of any NA's that would have come from unemployment
pov_data <- bi_class(pov_data, y=pct_pov,x=num_claim,style="jenks",dim=3)
pov_map<-ggplot() +
geom_sf(data=zip_manual,
fill="White")+
geom_sf(data=pov_data,
mapping=aes(fill=bi_class),
show.legend=FALSE)+
bi_scale_fill(pal="Bluegill",dim=3)+
bi_theme()
legend<-bi_legend(pal="Bluegill",
dim=3,
ylab = "% Poverty",
xlab = "Fish per Angler")
pov_plot <- ggdraw() +
draw_plot(pov_map,0,0,1,1)+
draw_plot(legend,0.2,.65,.2,.2)
pov_plot
ggplot(tripcatch_2022_acs,aes(pct_pov,num_claim)) +
geom_point() +
labs(title="Fish per Angler-Trip vs % Under Poverty Threshold")
all_tripcatch_2022 <- tripcatch_2022_acs |>
sf_join(weight_tripcatch_zip)
all_tripcatch_2022 <- tripcatch_2022_acs |>
sf_join(weight_tripcatch_zip)
all_tripcatch_2022 <- tripcatch_2022_acs |>
st_join(weight_tripcatch_zip)
ggplot(all_tripcatch_2022,aes(pct_pov,zip_weight)) +
geom_point() +
labs(title="Fish Caught (Claim) vs % Under Poverty Threshold")
all_tripcatch_2022 <- tripcatch_2022_acs |>
inner_join(weight_tripcatch_zip,by=c("ZIP"="ZIP"))
all_tripcatch_2022 <- tripcatch_2022_acs |>
st_drop_geometry() %>%
inner_join(weight_tripcatch_zip,.,by=c("ZIP"="ZIP"))
ggplot(all_tripcatch_2022,aes(pct_pov,zip_weight)) +
geom_point() +
labs(title="Fish Caught (Claim) vs % Under Poverty Threshold")
library(tidyverse)
library(here)
library(readr)
library(sf)
library(mapview)
library(RColorBrewer)
#load data
data_path <- here('data') #relative path to the data folder
load(here('data','intermediate_datasets','cb_zip.RData'))
load(here('data','intermediate_datasets','manual_zip.RData'))
load(here('data','intermediate_datasets','trip_catch_2022.RData'))
tripcatch_2022_zip <- trip_catch_2022 |>
group_by(ZIP)|>
reframe(num_eaten = sum(landing),
num_claim = sum(CLAIM),
num_id_codes = ID_CODE|>length(),
num_angler_trips = sum(CNTRBTRS))|>
#mutate(num_angler_trips = num_id_codes*sum(CNTRBTRS))|>
mutate(fish_per_angler_trip=num_claim/num_angler_trips)
#represents fish per person per trip
tripcatch_2022_zip <- zip_manual |>
left_join(tripcatch_2022_zip,by=c("ZIP"="ZIP"))
#if we do a right join with zip, you'll get all the zip codes but no relative knowledge of where they are
ggplot(data = tripcatch_2022_zip, aes(x=num_angler_trips))+geom_histogram()
ggplot(data = tripcatch_2022_zip, aes(x=fish_per_angler_trip))+geom_histogram()
#shows HEAVY skew right, most common value of fish/angler is 0 at the zipcode level
#max number of fish/angler is about 32
ggplot(tripcatch_2022_zip,aes(num_claim,num_angler_trips)) +
geom_point() +
labs(title="Fish caught (CLAIM) vs Number of Trips")
mapview(tripcatch_2022_zip,
zcol = 'num_claim',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = '# Fish Eaten')
mapview(tripcatch_2022_zip,
zcol = 'num_angler_trips',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Per Angler Per Trip Frequency')
mapview(tripcatch_2022_zip,
zcol = 'fish_per_angler_trip',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Number of Fish per Angler Trip')
#sum the weight of each zip code's trip's total fish
weight_tripcatch <- trip_catch_2022 |>
group_by(ID_CODE)|>
reframe(weight_claim = sum(wgt_a),
num_trip_ids = n(),
num_angler_trips=sum(CNTRBTRS),
weight_per_angler_per_trip = sum(weight_claim)/sum(CNTRBTRS))#should be 5444 obs
#note that this is by claim, not landing
#if we wanted to do landing, we'd have to edit the #cntrbtrs so that it shares values with the LEADER variable, bc cntrbtrs is always 0 for non-claim fish
#aggregate at zip code level
weight_tripcatch_zip <- trip_catch_2022 |>
group_by(ID_CODE,ZIP)|>
summarize()|>
inner_join(weight_tripcatch,by=c("ID_CODE"="ID_CODE"))|>#to add ZIP variable
group_by(ZIP)|>
reframe(zip_weight_per_angler_trip = sum(weight_per_angler_per_trip),
zip_weight = sum(weight_claim),
num_angler_trips = sum(num_angler_trips))
#join to zip
weight_tripcatch_zip <- zip_manual |>
left_join(weight_tripcatch_zip,by=c("ZIP"="ZIP"))
#map it
mapview(weight_tripcatch_zip,
zcol="zip_weight",
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Fish Weight')
#add the other zip_manual shapefile
mapview(weight_tripcatch_zip,
zcol="zip_weight_per_angler_trip",
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Weight per angler')
ggplot(data = weight_tripcatch_zip, aes(x=zip_weight))+geom_histogram()
ggplot(weight_tripcatch_zip,aes(zip_weight,num_angler_trips)) +
geom_point() +
labs(title="Fish weight (CLAIM) vs Number of Trips")
load(here('data','intermediate_datasets','acs_economic_cleaner.RData'))
#acs data has some duplicates, so we're going to remove them
acs_economic <- acs_economic |>
group_by(ZIP)|>
reframe(GEO_ID=GEO_ID[1],
NAME = NAME[1],
unemployment = unemployment[1],
pct_pov = pct_pov[1])
tripcatch_2022_acs <- tripcatch_2022_zip|>
inner_join(acs_economic,by=c("ZCTA5CE20"="ZIP")) |>
mutate(pct_pov = case_when( # reassign "-" values to NA - double check w excel that that's right
pct_pov == "-" ~ NA,
TRUE ~ pct_pov),
unemployment = case_when(
unemployment == "-" ~ NA,
TRUE ~ unemployment
))
#need to assign "-" to NA for pct_pov
tripcatch_2022_acs<- tripcatch_2022_acs|>
mutate(unemployment = unemployment |> as.numeric(),
pct_pov = pct_pov |> as.numeric())
library(biscale)
library(cowplot)
pov_per_angler_trip_data<-tripcatch_2022_acs |> select(-unemployment)|>
na.omit() # get rid of any NA's that would have come from unemployment
pov_per_angler_trip_data <- bi_class(pov_per_angler_trip_data, y=pct_pov,x=fish_per_angler_trip,style="jenks",dim=3)
pov_per_angler_trip_map<-ggplot() +
geom_sf(data=zip_manual,
fill="White")+
geom_sf(data=pov_per_angler_trip_data,
mapping=aes(fill=bi_class),
show.legend=FALSE)+
bi_scale_fill(pal="Bluegill",dim=3)+
bi_theme()
legend<-bi_legend(pal="Bluegill",
dim=3,
ylab = "% Low Income",
xlab = "Fish per Angler")
pov_per_angler_trip_plot <- ggdraw() +
draw_plot(map,0,0,1,1)+
draw_plot(legend,0.2,.65,.2,.2)
pov_per_angler_trip_plot
unemp_data<-tripcatch_2022_acs |> select(-pct_pov)|>
na.omit() # get rid of any NA's that would have come from unemployment
unemp_data <- bi_class(biv_data, y=pct_pov,x=fish_per_angler_trip,style="jenks",dim=3)
library(tidyverse)
library(here)
library(readr)
library(sf)
library(mapview)
library(RColorBrewer)
#load data
data_path <- here('data') #relative path to the data folder
load(here('data','intermediate_datasets','cb_zip.RData'))
load(here('data','intermediate_datasets','manual_zip.RData'))
load(here('data','intermediate_datasets','trip_catch_2022.RData'))
tripcatch_2022_zip <- trip_catch_2022 |>
group_by(ZIP)|>
reframe(num_eaten = sum(landing),
num_claim = sum(CLAIM),
num_trips = LEADER|> unique() |> length(),
num_id_codes = ID_CODE|>length(),
num_angler_trips = sum(CNTRBTRS))|> #double counts people who were on same trip (same LEADER variable) that caught 2 or more different species; for example, if someone contributes to catching 4 different fish species on 1 trip, that person is counted 4 times. No way to know how many contributors go on each trip
#mutate(num_angler_trips = num_id_codes*sum(CNTRBTRS))|>
mutate(fish_per_angler_trip=num_eaten/num_angler_trips)
#represents fish per person per trip
tripcatch_2022_zip <- zip_manual |>
left_join(tripcatch_2022_zip,by=c("ZIP"="ZIP"))
#if we do a right join with zip, you'll get all the zip codes but no relative knowledge of where they are
View(zip_manual)
mapView('zip_manual')
mapView(zip_manual)
tripcatch_2022_zip <- zip_manual |>
left_join(tripcatch_2022_zip,by=c("ZIP"="ZIP"))
ggplot(data = tripcatch_2022_zip, aes(x=num_angler_trips))+geom_histogram()
ggplot(data = tripcatch_2022_zip, aes(x=fish_per_angler_trip))+geom_histogram()
#shows HEAVY skew right, most common value of fish/angler is 0 at the zipcode level
#max number of fish/angler is about 32
ggplot(tripcatch_2022_zip,aes(num_claim,num_angler_trips)) +
geom_point() +
labs(title="Fish caught (CLAIM) vs Number of Trips")
mapview(tripcatch_2022_zip,
zcol = 'num_claim',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = '# Fish Eaten')
mapview(tripcatch_2022_zip,
zcol = 'num_angler_trips',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Per Angler Per Trip Frequency')
mapview(tripcatch_2022_zip,
zcol = 'fish_per_angler_trip',
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Number of Fish per Angler Trip')
mapview(tripcatch_2022_zip,
zcol = 'fish_per_angler_trip',
#col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Number of Fish per Angler Trip')
#sum the weight of each zip code's trip's total fish
weight_tripcatch <- trip_catch_2022 |>
group_by(ID_CODE)|>
reframe(weight_claim = sum(wgt_a),
num_trip_ids = n(),
num_angler_trips=sum(CNTRBTRS),
weight_per_angler_per_trip = sum(weight_claim)/sum(CNTRBTRS))#should be 5444 obs
#note that this is by claim, not landing
#if we wanted to do landing, we'd have to edit the #cntrbtrs so that it shares values with the LEADER variable, bc cntrbtrs is always 0 for non-claim fish
#aggregate at zip code level
weight_tripcatch_zip <- trip_catch_2022 |>
group_by(ID_CODE,ZIP)|>
summarize()|>
inner_join(weight_tripcatch,by=c("ID_CODE"="ID_CODE"))|>#to add ZIP variable
group_by(ZIP)|>
reframe(zip_weight_per_angler_trip = sum(weight_per_angler_per_trip),
zip_weight = sum(weight_claim),
num_angler_trips = sum(num_angler_trips))
#join to zip
weight_tripcatch_zip <- zip_manual |>
left_join(weight_tripcatch_zip,by=c("ZIP"="ZIP"))
#map it
mapview(weight_tripcatch_zip,
zcol="zip_weight",
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Fish Weight')
#add the other zip_manual shapefile
mapview(weight_tripcatch_zip,
zcol="zip_weight_per_angler_trip",
col.regions=brewer.pal(9, "Blues"),
alpha.regions = 0.8,
layer.name = 'Weight per angler')
