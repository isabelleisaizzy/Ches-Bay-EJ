---
title: "2022_visualizations"
format: html
editor: visual
---

## 

Setup

```{r}
library(tidyverse)
library(here)
library(readr)
library(sf)
library(mapview)
library(RColorBrewer)
```

```{r}
#load data
data_path <- here('data') #relative path to the data folder
```

load data. These datasets were made in the making_intermediate_datasets file in "Programs".

```{r}
load(here('data','intermediate_datasets','cb_zip.RData'))
load(here('data','intermediate_datasets','manual_zip.RData'))
load(here('data','intermediate_datasets','trip_catch_2022.RData'))
```

Visualizations

group tripcatch by zip code, convert zip_manual to character form

```{r}
tripcatch_2022_zip <- trip_catch_2022 |> #recall this is at the id code and species level
  group_by(ID_CODE)|>
  reframe(landing = sum(landing)*wp_int[1],
          tot_cat = sum(tot_cat)*wp_int[1],
          CLAIM = sum(CLAIM)*wp_int[1],#weight wp_int is at the trip level, represents num angler trips represented by 1 id code angler trip
          LEADER = LEADER[1], #leader is a trip variable so it's the same for each ID
          CNTRBTRS = CNTRBTRS[1]*wp_int[1],#cntrbtrs is also trip variable
          ZIP=ZIP[1],
          wp_int=wp_int[1])|> 
  group_by(ZIP)|>
  reframe(num_eaten = sum(landing),
          num_tot = sum(tot_cat),
          num_claim = sum(CLAIM),
          num_trips = sum(wp_int),
          num_id_codes = n(),
          num_angler_trips=sum(CNTRBTRS))|> 
  mutate(fish_per_angler_trip=case_when(
    num_angler_trips > 0 ~ num_claim/num_angler_trips,
    TRUE~ 0),
         claim_per_trip = num_claim/num_trips,
    pct_eaten =num_eaten/num_tot)

#angler-trip represents fish per person per trip
zip_manual <- zip_manual |>
  mutate(ZIP = case_when(
    nchar(ZIP) == 5 ~ as.character(ZIP),
    nchar(ZIP) == 4 ~ paste("0",as.character(ZIP),sep=""),
    nchar(ZIP) == 3 ~ paste("00",as.character(ZIP),sep="")
  ))
```

join zip and tripcatch together

```{r}
tripcatch_2022_zip <- zip_manual |> 
  left_join(tripcatch_2022_zip,by=c("ZIP"="ZIP"))

#if we do a right join with zip, you'll get all the zip codes but no relative knowledge of where they are
```

summary distribution type visualizations

fish distribution

```{r}
ggplot(data = tripcatch_2022_zip, aes(x=num_claim))+geom_histogram()+
  labs(title="# Zip Codes vs Num Claim")
```

angler trip distribution

```{r}
ggplot(data = tripcatch_2022_zip, aes(x=num_angler_trips))+geom_histogram()+
  labs(title="#Zip Codes vs # Angler-Trips")
```

fish per angler trip distribution

```{r}
ggplot(data = tripcatch_2022_zip, aes(x=fish_per_angler_trip))+geom_histogram()+
  labs(title="#Zips vs Fish per Angler Trips")
#shows HEAVY skew right, most common value of fish/angler is 0 at the zipcode level
```

fish per trip distribution

```{r}
ggplot(data = tripcatch_2022_zip, aes(x=claim_per_trip))+geom_histogram()+
  labs(title="#Zips vs Fish per Trip")
#shows HEAVY skew right, most common value of fish/angler is 0 at the zipcode level
```

relationship between fish eaten and number of angler trips

```{r}
ggplot(tripcatch_2022_zip,aes(num_angler_trips,num_claim)) +
  geom_point() +
  labs(title="Fish caught (CLAIM) vs Number of Angler-Trips")
```

fish eaten (by CLAIM)

```{r}
mapview(tripcatch_2022_zip,
      zcol = 'num_claim',
          col.regions=brewer.pal(9, "Blues"),
          alpha.regions = 0.8,
          layer.name = '# Fish Eaten')
```

fish eaten per trip

```{r}
mapview(tripcatch_2022_zip,
      zcol = 'claim_per_trip',
          col.regions=brewer.pal(9, "Blues"),
          alpha.regions = 0.8,
          layer.name = '# Fish Eaten per Trip')
```

map of number of per trip per anglers who contributed to CLAIM

```{r}
mapview(tripcatch_2022_zip,
      zcol = 'num_angler_trips',
          col.regions=brewer.pal(9, "Blues"),
          alpha.regions = 0.8,
          layer.name = 'Per Angler Per Trip Frequency')
```

Number of fish per angler trip

```{r}
mapview(tripcatch_2022_zip,
      zcol = 'fish_per_angler_trip',
          col.regions=brewer.pal(9, "Blues"),
          alpha.regions = 0.8,
          layer.name = 'Number of Fish per Angler-Trip')

```

pct eaten (landing/tot_catch)

```{r}
mapview(tripcatch_2022_zip,
      zcol = 'pct_eaten',
          col.regions=brewer.pal(9, "Blues"),
          alpha.regions = 0.8,
          layer.name = '% Fish Eaten')
```

Amt of fish by weight

```{r}
#sum the weight of each zip code's trip's total fish
weight_tripcatch <- trip_catch_2022 |>
  group_by(ID_CODE)|>
  reframe(weight_claim = sum(wgt_a)*wp_int,
            num_trip_ids = n(),
          num_angler_trips=sum(CNTRBTRS)*wp_int,
    weight_per_angler_per_trip = sum(weight_claim)/sum(CNTRBTRS))#should be 5444 obs
#note that this is by claim, not landing
#if we wanted to do landing, we'd have to edit the #cntrbtrs so that it shares values with the LEADER variable, bc cntrbtrs is always 0 for non-claim fish

#aggregate at zip code level
weight_tripcatch_zip <- trip_catch_2022 |>
  group_by(ID_CODE,ZIP)|>
  summarize()|>
  inner_join(weight_tripcatch,by=c("ID_CODE"="ID_CODE"))|>#to add ZIP variable
  group_by(ZIP)|>
  reframe(zip_weight_per_angler_trip = sum(weight_per_angler_per_trip),
          zip_weight = sum(weight_claim),
          num_angler_trips = sum(num_angler_trips))
#join to zip
weight_tripcatch_zip <- zip_manual |>
  left_join(weight_tripcatch_zip,by=c("ZIP"="ZIP"))
#map it
  mapview(weight_tripcatch_zip,
        zcol="zip_weight",
        col.regions=brewer.pal(9, "Blues"),
          alpha.regions = 0.8,
          layer.name = 'Fish Weight') 
#add the other zip_manual shapefile
```

Amt of fish in weight per angler-tript

```{r}
mapview(weight_tripcatch_zip,
        zcol="zip_weight_per_angler_trip",
        col.regions=brewer.pal(9, "Blues"),
          alpha.regions = 0.8,
          layer.name = 'Weight per angler')
```

```{r}
ggplot(data = weight_tripcatch_zip, aes(x=zip_weight))+geom_histogram()+
  labs(title="# Zips vs Total Weight of Claim")
```

```{r}
ggplot(weight_tripcatch_zip,aes(zip_weight,num_angler_trips)) +
  geom_point() +
  labs(title="Fish weight (CLAIM) vs Number of Trips")
```

Bivariate mapping (ACS data): show relationship between race/income + fish consumption

load ACS poverty data

```{r}
load(here('data','intermediate_datasets','acs_economic_cleaner.RData'))
```

join acs econ data to tripcatch

```{r}
#acs data has some duplicates, so we're going to remove them
acs_economic <- acs_economic |>
  group_by(ZIP)|>
  reframe(GEO_ID=GEO_ID[1],
          NAME = NAME[1],
          unemployment = unemployment[1],
          pct_pov = pct_pov[1])
tripcatch_2022_acs <- tripcatch_2022_zip|>
  inner_join(acs_economic,by=c("ZCTA5CE20"="ZIP")) |>
  replace("-",NA)
#need to assign "-" to NA for pct_pov
tripcatch_2022_acs<- tripcatch_2022_acs|>
  mutate(unemployment = unemployment |> as.numeric(),
         pct_pov = pct_pov |> as.numeric())
```

bivariate package data (biscale)

```{r}
library(biscale)
library(cowplot)
pov_per_angler_trip_data <- bi_class(tripcatch_2022_acs, y=pct_pov,x=num_claim,style="jenks",dim=3)
```

```{r}
pov_per_angler_trip_map<-ggplot() +
  geom_sf(data=zip_manual,
          fill="White")+
  geom_sf(data=pov_per_angler_trip_data,
          mapping=aes(fill=bi_class),
          show.legend=FALSE)+
  bi_scale_fill(pal="Bluegill",dim=3)+
  bi_theme() 
legend<-bi_legend(pal="Bluegill",
                  dim=3,
                  ylab = "% Low Income",
                  xlab = "Number of Fish")

pov_per_angler_trip_plot_zoom <- ggdraw(xlim=c(.4,.7),ylim=c(.5,.8)) +
  draw_plot(pov_per_angler_trip_map,0,0,1,1)+
  draw_plot(legend,0.2,.65,.1,.1)
pov_per_angler_trip_plot <- ggdraw() +
  draw_plot(pov_per_angler_trip_map,0,0,1,1)+
  draw_plot(legend,0.2,.65,.2,.2)
pov_per_angler_trip_plot
```

```{r}
unemp_data <- bi_class(tripcatch_2022_acs, y=unemployment,x=num_claim,style="jenks",dim=3)
```

ggplot ej groups against fish caught

```{r}
ggplot(tripcatch_2022_acs,aes(pct_pov,num_claim)) +
  geom_point(alpha=0.2) +
  labs(title="Number of Fish vs % Under Poverty Threshold")
#shows vast majority of fishing zip codes get no fish
#loose negative correlation btwn fish/angler and percent under the pov threshold
```

same plot but with zips that caught at least 5 fish per angler trip

```{r}
can_fish <- tripcatch_2022_acs|>
  filter(num_claim>100)
ggplot(can_fish,aes(pct_pov,fish_per_angler_trip)) +
  geom_point() +
  labs(title="Fish per Angler-Trip vs % Under Poverty Threshold")
#relationship inverse; so for avid fishers, having more ppl under poverty threshold is a predictor of fish per angler caught
```

unemployment bivariate map, fish per angler. self note: unemp map p much looks same as poverty map

```{r}
unemp_data <- bi_class(tripcatch_2022_acs, y=unemployment,x=fish_per_angler_trip,style="jenks",dim=3)

unemp_map<-ggplot() +
  geom_sf(data=zip_manual,
          fill="White")+
  geom_sf(data=unemp_data,
          mapping=aes(fill=bi_class),
          show.legend=FALSE)+
  bi_scale_fill(pal="Bluegill",dim=3)+
  bi_theme() 
legend<-bi_legend(pal="Bluegill",
                  dim=3,
                  ylab = "% Unemployed",
                  xlab = "Fish per Angler")

unemp_per_angler_trip_plot <- ggdraw() +
  draw_plot(unemp_map,0,0,1,1)+
  draw_plot(legend,0.2,.65,.2,.2)
unemp_per_angler_trip_plot
```

same bivariate maps, but per angler trip

```{r}
pov_data<-tripcatch_2022_acs |> select(-unemployment)|>
  na.omit() # get rid of any NA's that would have come from unemployment
pov_data <- bi_class(tripcatch_2022_acs, y=pct_pov,x=fish_per_angler,style="jenks",dim=3)

pov_map<-ggplot() +
  geom_sf(data=zip_manual,
          fill="White")+
  geom_sf(data=pov_data,
          mapping=aes(fill=bi_class),
          show.legend=FALSE)+
  bi_scale_fill(pal="Bluegill",dim=3)+
  bi_theme() 
legend<-bi_legend(pal="Bluegill",
                  dim=3,
                  ylab = "% Poverty",
                  xlab = "Fish")

pov_plot <- ggdraw() +
  draw_plot(pov_map,0,0,1,1)+
  draw_plot(legend,0.2,.65,.2,.2)
pov_plot
```

```{r}
all_tripcatch_2022 <- tripcatch_2022_acs |> 
  st_drop_geometry() %>%
  inner_join(weight_tripcatch_zip,.,by=c("ZIP"="ZIP"))

ggplot(all_tripcatch_2022,aes(pct_pov,zip_weight)) +
  geom_point() +
  labs(title="Weight of Fish Caught (Claim) vs % Under Poverty Threshold")
```

load acs imm data

```{r}
load(here('data','intermediate_datasets','acs_imm_cleaner.RData'))
```

join acs imm data

```{r}
#acs data has some duplicates, so we're going to remove them
acs_imm <- acs_imm |>
  group_by(ZIP)|>
  reframe(GEO_ID=GEO_ID[1],
          noncit=noncit[1],
          not_english = not_english[1],
          college = college[1])
tripcatch_2022_acs <- tripcatch_2022_acs|>
  inner_join(acs_imm,by=c("ZIP"="ZIP")) |>
  replace("-",NA)
#need to assign "-" to NA for pct_pov
tripcatch_2022_acs<- tripcatch_2022_acs|>
  mutate(noncit = noncit |> as.numeric(),
         not_english = not_english |> as.numeric())
```

english not spoken at home bivariate map

```{r}
english_per_angler_trip_data <- bi_class(tripcatch_2022_acs, y=not_english,x=fish_per_angler_trip,style="jenks",dim=3)

english_map<-ggplot() +
  geom_sf(data=zip_manual,
          fill="White")+
  geom_sf(data=english_per_angler_trip_data,
          mapping=aes(fill=bi_class),
          show.legend=FALSE)+
  bi_scale_fill(pal="Bluegill",dim=3)+
  bi_theme() 
legend<-bi_legend(pal="Bluegill",
                  dim=3,
                  ylab = "% Non-English Speaking Households",
                  xlab = "Fish per Angler")

english_per_angler_trip_plot <- ggdraw() +
  draw_plot(english_map,0,0,1,1)+
  draw_plot(legend,0.2,.65,.2,.2)
english_per_angler_trip_plot
```

```{r}
ggplot(tripcatch_2022_acs,aes(not_english,num_claim)) +
  geom_point() +
  labs(title="Claim vs % Families who Do Not Speak English at Home")
```

load acs race data

```{r}
load(here('data','intermediate_datasets','acs_race_cleaner.RData'))
```

join acs race data

```{r}
#acs data has some duplicates, so we're going to remove them
acs_race <- acs_race |>
  group_by(ZIP)|>
  reframe(GEO_ID=GEO_ID[1],
          black=black[1]|>as.numeric(),
          white = white[1]|>as.numeric(),
          asian = asian[1]|>as.numeric(),
          indigenous = indigenous[1]|>as.numeric(),
          pac_islander=pac_islander[1]|>as.numeric(),
          hispanic = hispanic[1]|>as.numeric(),
          nonwhite=nonwhite[1]|>as.numeric())
tripcatch_2022_acs <- tripcatch_2022_acs|>
  inner_join(acs_race,by=c("ZIP"="ZIP")) |>
  replace("-",NA)
#need to assign "-" to NA for pct_pov

```

race bivariate plot

```{r}
race_per_angler_trip_data <- bi_class(tripcatch_2022_acs, y=black,x=num_claim,style="jenks",dim=3)

race_map<-ggplot() +
  geom_sf(data=zip_manual,
          fill="White")+
  geom_sf(data=race_per_angler_trip_data,
          mapping=aes(fill=bi_class),
          show.legend=FALSE)+
  bi_scale_fill(pal="Bluegill",dim=3)+
  bi_theme() 
legend<-bi_legend(pal="Bluegill",
                  dim=3,
                  ylab = "% Black",
                  xlab = "Claim")

race_per_angler_trip_plot <- ggdraw() +
  draw_plot(race_map,0,0,1,1)+
  draw_plot(legend,0.2,.65,.2,.2)
race_per_angler_trip_plot
```

```{r}
ggplot(tripcatch_2022_acs,aes(nonwhite,num_claim)) +
  geom_point() +
  labs(title="Number of Fish vs % Nonwhite")
```

```{r}
ggplot(tripcatch_2022_acs,aes(black,num_claim)) +
  geom_point(alpha=0.2) +
  labs(title="Number of Fish vs % Black")
```

```{r}
ggplot(tripcatch_2022_acs,aes(hispanic,num_claim)) +
  geom_point() +
  labs(title="Number of Fish vs % Hispanic")
```

```{r}
ggplot(tripcatch_2022_acs,aes(indigenous,num_claim)) +
  geom_point() +
  labs(title="Number of Fish vs % Indigenous")
```

```{r}
ggplot(tripcatch_2022_acs,aes(asian,num_claim)) +
  geom_point() +
  labs(title="Number of Fish vs % Asian")
```

```{r}
ggplot(tripcatch_2022_acs,aes(white,num_claim)) +
  geom_point() +
  labs(title="Number of Fish vs % White")
```

visual of race versus species

```{r}
#pick top 5 species
trip_catch_2022 |>
  group_by(common)|>
  reframe(num = n())%>%
  arrange(desc(.$num))|>
  head(20)
```

```{r}
#wrangle so that there's a number of each of the top species in each zip code
croaker <- trip_catch_2022 |>
  filter(common == "ATLANTIC CROAKER")|>
  mutate(num_croaker=CLAIM*wp_int)|>
  group_by(ZIP)|>
  reframe(num_croaker = sum(num_croaker))
  
striped_bass <- trip_catch_2022 |>
  filter(common == "STRIPED BASS")|>
  mutate(num_stripedbass=CLAIM*wp_int)|>
  group_by(ZIP)|>
  reframe(num_stripedbass = sum(num_stripedbass))
  
spot <- trip_catch_2022 |>
  filter(common == "SPOT")|>
  mutate(num_spot=CLAIM*wp_int)|>
  group_by(ZIP)|>
  reframe(num_spot = sum(num_spot))
  
bs_bass <- trip_catch_2022 |>
  filter(common == "BLACK SEA BASS")|>
  mutate(num_bsbass=CLAIM*wp_int)|>
  group_by(ZIP)|>
  reframe(num_bsbass = sum(num_bsbass))
  
tripcatch_2022_acs <-
  tripcatch_2022_acs |>
  left_join(croaker, by=c("ZIP"="ZIP"))|>
  left_join(striped_bass, by=c("ZIP"="ZIP"))|>
  left_join(spot,by=c("ZIP"="ZIP"))|>
  left_join(bs_bass,by=c("ZIP"="ZIP"))
```

```{r}
#| warning: false
croaker_bw <- ggplot(tripcatch_2022_acs) +
         geom_point(aes(x=black,y=num_croaker),colour = "red",alpha=0.5)+
         geom_point(aes(x=white,y=num_croaker),colour = "blue",alpha=0.5)+
  labs(title="Number of Croakers Eaten vs Percent Race")

striped_bass_bw <- ggplot(tripcatch_2022_acs) +
         geom_point(aes(x=black,y=num_stripedbass),colour = "red",alpha=0.5)+
         geom_point(aes(x=white,y=num_stripedbass),colour = "blue",alpha=0.5)+
  labs(title="Number of Striped Bass Eaten vs Percent Race")

spot_bw <- ggplot(tripcatch_2022_acs) +
         geom_point(aes(x=black,y=num_spot),colour = "red",alpha=0.5)+
         geom_point(aes(x=white,y=num_spot),colour = "blue",alpha=0.5)+
  labs(title="Number of Spot Eaten vs Percent Race")

bs_bass_bw <- ggplot(tripcatch_2022_acs) +
         geom_point(aes(x=black,y=num_bsbass),colour = "red")+
         geom_point(aes(x=white,y=num_bsbass),colour = "blue")+
  labs(title="Number of Croakers Eaten vs Percent Race")

library(patchwork)
croaker_bw/striped_bass_bw/spot_bw
```

```{r}
maj_black <- tripcatch_2022_acs |>
  filter(black>0.5)
ggplot(maj_black, aes(black, num_croaker,group=x)) + geom_boxplot() 
```
